{"mappings":"ACEA,IAOQ,EAPF,EAAmB,SAAS,aAAa,CAAC,MAEhD,SAAS,EAAQ,CAAM,EACrB,OAAO,SAAS,EAAO,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,IACvD,CAGQ,EAAY,MAAM,IAAI,CAAC,AAyBtB,EAzB2B,QAAQ,EAAE,IAAI,CAC9C,SAAC,CAAA,CAAG,CADN,EACY,OAAA,EAAQ,EAAE,OAAO,CAAC,MAAM,EAAI,EAAQ,EAAE,OAAO,CAAC,MAAM,C,GAGhE,AAqBO,EArBF,SAAS,CAAG,GACjB,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA+B,OAAA,AAoBxB,EApB6B,WAAW,CAAC,E,GAqBlD,AAlBA,SAAsB,CAAI,EACxB,IAAM,EAAY,EAAE,CAEd,EAAY,MAAM,IAAI,CAAC,EAAK,QAAQ,EAErC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAU,IAAI,CAAC,CACb,KAAM,EAAK,SAAS,CACpB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,E,C,C,M,E,CANG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUP,EAGa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar listFromDocument = document.querySelector(\"ul\");\nfunction convert(salary) {\n    return parseInt(salary.replace(\"$\", \"\").replace(\",\", \"\"));\n}\nfunction sortList(list) {\n    var listItems = Array.from(list.children).sort(function(a, b) {\n        return convert(b.dataset.salary) - convert(a.dataset.salary);\n    });\n    list.innerHTML = \"\";\n    listItems.forEach(function(element) {\n        return list.appendChild(element);\n    });\n}\nfunction getEmployees(list) {\n    var employees = [];\n    var listItems = Array.from(list.children);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = listItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var item = _step.value;\n            employees.push({\n                name: item.innerText,\n                position: item.dataset.position,\n                salary: item.dataset.salary,\n                age: item.dataset.age\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return employees;\n}\nsortList(listFromDocument);\ngetEmployees(listFromDocument);\n\n//# sourceMappingURL=index.8d0cfcd1.js.map\n","'use strict';\n\nconst listFromDocument = document.querySelector('ul');\n\nfunction convert(salary) {\n  return parseInt(salary.replace('$', '').replace(',', ''));\n}\n\nfunction sortList(list) {\n  const listItems = Array.from(list.children).sort(\n    (a, b) => convert(b.dataset.salary) - convert(a.dataset.salary),\n  );\n\n  list.innerHTML = '';\n  listItems.forEach((element) => list.appendChild(element));\n}\n\nfunction getEmployees(list) {\n  const employees = [];\n\n  const listItems = Array.from(list.children);\n\n  for (const item of listItems) {\n    employees.push({\n      name: item.innerText,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    });\n  }\n\n  return employees;\n}\n\nsortList(listFromDocument);\ngetEmployees(listFromDocument);\n"],"names":["listItems","listFromDocument","document","querySelector","convert","salary","parseInt","replace","Array","from","list","children","sort","a","b","dataset","innerHTML","forEach","element","appendChild","getEmployees","employees","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","push","name","innerText","position","age","err","return"],"version":3,"file":"index.8d0cfcd1.js.map"}